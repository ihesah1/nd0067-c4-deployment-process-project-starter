version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  api-build-deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:16.18"
    steps:
      - checkout
      - node/install:
          node-version: '16.18'
      - aws-cli/setup
      - eb/setup
      # install dependencies
      - run:
          name: Install API Dependencies in this step
          command: |
            cd udagram && npm run api:install
      # Build
      - run:
          name: API Build in this step
          command: |
            cd udagram && npm run api:build
      # Deploy
      - run:
          name: Deploy API
          command: |
            cd udagram && npm run api:deploy
  frontend-build-deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:16.18"
    steps:
      - checkout
      - node/install:
          node-version: '16.18'
      - aws-cli/install
      # install dependencies
      - run:
          name: Angular CLI Dependencies
          command: |
            npm i -g @angular/cli      
      - run:
          name: Install Frontend Dependencies
          command: |
            cd udagram && npm run frontend:install
      # Lint
      - run:
          name: Frontend Lint
          command: |
            cd udagram && npm run frontend:lint
      # Build
      - run:
          name: Frontend Build
          command: |
            cd udagram && npm run frontend:build
      # Deploy
      - run:
          name: Deploy Frontend
          command: |
            cd udagram && npm run frontend:deploy
# Workflow only runs matster branch. API must complete before Frontend
            
workflows:
  udagram:
    jobs:
      - api-build-deploy:
          filters:
            branches:
              only: /^master/
      - frontend-build-deploy:
          requires:
            - api-build-deploy
          filters: 
            branches:
              only: /^master/
